/*
 Navicat Premium Dump SQL

 Source Server         : 192.168.31.66
 Source Server Type    : MySQL
 Source Server Version : 80039 (8.0.39-0ubuntu0.24.04.1)
 Source Host           : 192.168.31.66:3306
 Source Schema         : remi-nacos

 Target Server Type    : MySQL
 Target Server Version : 80039 (8.0.39-0ubuntu0.24.04.1)
 File Encoding         : 65001

 Date: 29/08/2024 15:13:41
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE `config_info`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'group_id',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'app_name',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'configuration description',
  `c_use` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'configuration usage',
  `effect` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT '配置生效的描述',
  `type` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT '配置的类型',
  `c_schema` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL COMMENT '配置的模式',
  `encrypted_data_key` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT '密钥',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfo_datagrouptenant`(`data_id` ASC, `group_id` ASC, `tenant_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 41 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = 'config_info' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info
-- ----------------------------
INSERT INTO `config_info` VALUES (1, 'sdt-paas-dev.yaml', 'dev', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  api-docs:\n    enabled: true \n  group-configs:\n    - group: 后端API接口\n     packages-to-scan: com.startdis.paas.web\n    - group: 前端API接口\n     packages-to-scan: com.startdis.paas.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志类型\nlogback:\n  fileType: log\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '274c5ffb6b9eb1deb3ce5eedcdac1cef', '2024-06-28 13:08:23', '2024-07-18 00:44:27', 'nacos', '192.168.31.18', 'paas', 'dev', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (2, 'sdt-ids-web-dev.yaml', 'dev', 'spring:\n  application:\n    name: sdt-ids-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.2.202:3306/sdt-paas-ids?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: Sdt@1020\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.2.202\n    password: \n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.2.202:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020\n  #存储桶\n  bucketName: sdt-paas-ids\n\n# XXL-JOB\nxxl-job:\n  enabled: false\n  # 调度中心部署跟地址\n  adminAddresses: http://127.0.0.1:8080/xxl-job-admin\n  # 执行器通讯TOKEN\n  accessToken:\n  # 执行器\n  executor:\n    # 执行器AppName\n    appname: sdt-ids-job\n    # 执行器注册地址\n    address:\n    # 执行器IP\n    ip:\n    # 执行器端口号\n    port:\n    # 执行器运行日志文件存储磁盘路径\n    logPath: /app/logs/sdt-ids-job\n    # 执行器日志文件保存天数\n    logRetentionDays: 30\n  \n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: /Logs/ydsz/sdt-scmam/${spring.application.name}/\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', 'df8e5ac82a823bebd8fcc10330777329', '2024-06-28 13:12:36', '2024-07-09 15:04:55', 'nacos', '192.168.2.200', 'paas', 'dev', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (8, 'sdt-ams-web-dev.yaml', 'dev', 'spring:\n  application:\n    name: sdt-ams-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-paas-ams?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: Sdt@1020\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: \n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020\n  #存储桶\n  bucketName: sdt-paas-ids\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: /Logs/ydsz/sdt-scmam/${spring.application.name}/\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '92738e529df54b821391fe56766126b1', '2024-07-01 10:58:08', '2024-07-18 11:34:15', 'nacos', '192.168.31.18', 'paas', 'dev', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (9, 'sdt-mps-web-dev.yaml', 'dev', 'spring:\n  application:\n    name: sdt-mps-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.2.202:3306/sdt-paas-mps?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: Sdt@1020\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    # postgre\n    # validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.2.202\n    password: \n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.2.202:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020\n  #存储桶\n  bucketName: sdt-paas-ids\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: /Logs/ydsz/sdt-scmam/${spring.application.name}/\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', 'd1c6144386e8c1b88902290c990d7e3b', '2024-07-01 10:58:19', '2024-07-01 11:11:34', 'nacos', '192.168.2.200', 'paas', 'dev', '权限引擎', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (10, 'sdt-paas-uat.yaml', 'uat', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# knife4j配置\nknife4j:\n  #启用\n  enable: true\n  #基础认证\n  basic:\n    enable: false\n    username: startdis\n    password: 123456\n  #增强配置\n  setting:\n    enableSwaggerModels: true\n    enableDocumentManage: true\n    enableHost: false\n    enableHostText: http://localhost\n    enableRequestCache: true\n    enableFilterMultipartApis: false\n    enableFilterMultipartApiMethodType: POST\n    language: zh-CN\n    enableFooter: false\n    enableFooterCustom: true\n    footerCustomContent: Copyright © 2021 Startdis All Rights Reserved\n\n# 定义日志类型\nlogback:\n  fileType: log\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '40de4718e498c8873ae9eeb3649c1fca', '2024-07-08 17:17:41', '2024-07-08 17:17:41', NULL, '192.168.2.200', 'paas', 'uat', '', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (11, 'sdt-ids-web-uat.yaml', 'uat', 'spring:\n  application:\n    name: sdt-ids-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.2.202:3306/sdt-paas-ids?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: Sdt@1020\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.2.202\n    password: \n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.2.202:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020\n  #存储桶\n  bucketName: sdt-paas-ids\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: /Logs/ydsz/sdt-scmam/${spring.application.name}/\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '7fa22f6f58096863bb20a43f662058bc', '2024-07-08 17:18:03', '2024-07-08 17:18:03', NULL, '192.168.2.200', 'paas', 'uat', '', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (15, 'sdt-saas-dev.yaml', 'dev', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  api-docs:\n    enabled: true \n  group-configs:\n    - group: 后端API接口\n     packages-to-scan: com.startdis.saas.web\n    - group: 前端API接口\n     packages-to-scan: com.startdis.saas.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.startdis: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.startdis.saas.infra.mapper: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '427a864a43d28b565914b06a65434ad7', '2024-07-13 23:25:16', '2024-07-18 22:01:40', 'nacos', '192.168.31.18', 'paas', 'dev', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (26, 'startdis-identity-web-sit.yaml', 'sit', 'spring:\n  application:\n    name: startdis-identity-web\n  config:\n    activate:\n      on-profile: sit\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-paas-ids?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-ids\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\paas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '0c2a6209bf75fa3da163b87ad5a4c183', '2024-07-22 19:53:21', '2024-07-22 20:14:34', 'nacos', '192.168.31.18', 'paas', 'sit', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (27, 'startdis-sit.yaml', 'sit', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  api-docs:\n    enabled: true \n  group-configs:\n    - group: 后端API接口\n     packages-to-scan: com.startdis.paas.web\n    - group: 前端API接口\n     packages-to-scan: com.startdis.paas.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志类型\nlogback:\n  fileType: log\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '274c5ffb6b9eb1deb3ce5eedcdac1cef', '2024-07-22 19:54:26', '2024-07-22 19:54:26', NULL, '192.168.31.18', 'paas', 'sit', '', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (29, 'sdt-ams-web-limw.yaml', 'limw', 'spring:\n  application:\n    name: sdt-ams-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-paas-ams?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-ams\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\paas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '33d08fe406a2dfdcf37eb44325c95323', '2024-08-09 21:40:53', '2024-08-09 21:40:53', NULL, '192.168.31.99', 'paas', 'limw', '', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (30, 'sdt-crm-web-limw.yaml', 'limw', 'spring:\n  application:\n    name: sdt-crm-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-crm?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    username: root\n    password: 123456\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-saas-crm\n\n# XXL-JOB\nxxl-job:\n  enabled: false\n  # 调度中心部署跟地址\n  adminAddresses: http://192.168.31.88:8080/xxl-job-admin\n  # 执行器通讯TOKEN\n  accessToken:\n  # 执行器\n  executor:\n    # 执行器AppName\n    appname: sdt-ids-job\n    # 执行器注册地址\n    address:\n    # 执行器IP\n    ip:\n    # 执行器端口号\n    port:\n    # 执行器运行日志文件存储磁盘路径\n    logPath: /app/logs/sdt-ids-job\n    # 执行器日志文件保存天数\n    logRetentionDays: 30\n  \n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    appName: IDS\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\paas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '89c1e4fcdcb4a0f6004b254342487498', '2024-08-09 21:40:54', '2024-08-09 21:40:54', NULL, '192.168.31.99', 'paas', 'limw', '', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (31, 'sdt-lce-web-limw.yaml', 'limw', 'spring:\n  application:\n    name: sdt-ids-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-paas-lce?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    username: root\n    password: 123456\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-lce\n\n# XXL-JOB\nxxl-job:\n  enabled: false\n  # 调度中心部署跟地址\n  adminAddresses: http://127.0.0.1:8080/xxl-job-admin\n  # 执行器通讯TOKEN\n  accessToken:\n  # 执行器\n  executor:\n    # 执行器AppName\n    appname: sdt-ids-job\n    # 执行器注册地址\n    address:\n    # 执行器IP\n    ip:\n    # 执行器端口号\n    port:\n    # 执行器运行日志文件存储磁盘路径\n    logPath: /app/logs/sdt-ids-job\n    # 执行器日志文件保存天数\n    logRetentionDays: 30\n  \n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\ncode:\n  formatXml: true\n  basePath: D:\\\\Codes\\\\demo\n\n# 开启系统操作日志\nlog:\n  record:\n    appName: IDS\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\paas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '705ff1d0125bc31e21b0ad84e8b7a97a', '2024-08-09 21:40:54', '2024-08-09 21:40:54', NULL, '192.168.31.99', 'paas', 'limw', '', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (32, 'sdt-sso-web-limw.yaml', 'limw', 'spring:\n  application:\n    name: sdt-sso-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-paas-sso?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-sso\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\paas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', 'bf46a06e76bf21a3f9c90eb9f42fedc1', '2024-08-09 21:40:55', '2024-08-09 21:40:55', NULL, '192.168.31.99', 'paas', 'limw', '', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (33, 'sdt-ids-web-limw.yaml', 'limw', 'spring:\n  application:\n    name: sdt-ids-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-paas-ids?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-ids\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\paas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '9fa1112ca9ea688c084a952f0dcc3a73', '2024-08-09 21:40:55', '2024-08-09 21:40:55', NULL, '192.168.31.99', 'paas', 'limw', '', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (34, 'sdt-mps-web-limw.yaml', 'limw', 'spring:\n  application:\n    name: sdt-mps-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-paas-mps?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-mps\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\paas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '09237428899dbabf76edaa110cd885ea', '2024-08-09 21:41:23', '2024-08-09 21:41:23', NULL, '192.168.31.99', 'paas', 'limw', '', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (35, 'sdt-iam-web-limw.yaml', 'limw', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /sso/login/ticket,/sso/login/other,/sso/login/local,/sso/logout,/sso/oauth2/accessToken,/sso/oauth2/refreshToken,/sso/oauth2/checkToken\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IAM\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\saas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: iam\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', 'd6be24f23c813c115560a2a755d8e719', '2024-08-09 21:41:24', '2024-08-16 11:31:32', 'nacos', '192.168.31.18', 'saas', 'limw', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (36, 'sdt-saas-limw.yaml', 'limw', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  #是否开启文档功能\n  api-docs:\n    enabled: true \n  #这里定义了两个分组，可定义多个，也可以不定义\n  group-configs:\n      #分组名\n    - group: web\n      #按包路径匹配\n      packagesToScan: com.startdis.saas.web\n      #分组名\n    - group: app\n      #按包路径匹配\n      packagesToScan: com.startdis.saas.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.startdis: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.startdis.saas.infra.mapper: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '67c73111705ee266c33ee532a045c668', '2024-08-09 21:41:24', '2024-08-16 14:26:58', 'nacos', '192.168.31.18', 'saas', 'limw', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (38, 'sdt-paas-limw.yaml', 'limw', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  api-docs:\n    enabled: true \n  group-configs:\n    - group: 后端API接口\n     packages-to-scan: com.startdis.paas.web\n    - group: 前端API接口\n     packages-to-scan: com.startdis.paas.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志类型\nlogback:\n  fileType: log\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n\nspring:\n  banner:\n    charset: UTF-8\n    location: classpath:banner.txt\n  # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '3c0521adf9e4dc88cdaf485576f275a8', '2024-08-09 21:44:26', '2024-08-11 10:08:38', 'nacos', '192.168.31.99', 'paas', 'limw', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (39, 'cloud-dev.yaml', 'dev', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  swagger-ui:\n    path: /swagger-ui.html\n  api-docs:\n    path: /v3/api-docs\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.startdis: debug\n    # spring 包日志输出级别\n    org.springframework: info\n    # alibaba 包日志输出级别\n    com.alibaba.cloud: info\n    # nacos 心跳 INFO 屏蔽\n    com.alibaba.nacos: off\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', 'a0477dbca09826cf3025b6303f4707c9', '2024-08-16 20:23:39', '2024-08-17 01:36:43', 'nacos', '192.168.31.18', 'saas', 'cloud', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (40, 'sdt-iam-web-dev.yaml', 'dev', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n      \n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /sso/login/ticket,/sso/login/other,/sso/login/local,/sso/logout,/sso/oauth2/accessToken,/sso/oauth2/refreshToken,/sso/oauth2/checkToken,/logRecord/add,/logRecord/pageLogin,/logRecord/pageOperate,/logRecord/pageException\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n# springdoc-openapi项目配置\nspringdoc:\n  #是否开启文档功能\n  group-configs:\n    - group: \'iam-web\'\n      paths-to-match: \'/**\'\n      packages-to-scan: com.startdis.iam.web\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n    appName: IAM\n    pushUrl: http://localhost:6103/operateLog/add\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\Logs\\sdt\\cloud\\${spring.application.name}\\\n  maxSize: 500MB\n  maxDays: 30\n\n# 应用信息\nappInfo:\n  code: iam\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '868c6510f6b070d0228ae789b3803338', '2024-08-16 20:24:01', '2024-08-17 01:38:02', 'nacos', '192.168.31.18', 'saas', 'cloud', '', '', '', 'yaml', '', '');

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE `config_info_aggr`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'app_name',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfoaggr_datagrouptenantdatum`(`data_id` ASC, `group_id` ASC, `tenant_id` ASC, `datum_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = '增加租户字段' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info_aggr
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE `config_info_beta`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT '租户字段',
  `encrypted_data_key` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT '密钥',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfobeta_datagrouptenant`(`data_id` ASC, `group_id` ASC, `tenant_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = 'config_info_beta' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info_beta
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE `config_info_tag`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfotag_datagrouptenanttag`(`data_id` ASC, `group_id` ASC, `tenant_id` ASC, `tag_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = 'config_info_tag' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info_tag
-- ----------------------------

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE `config_tags_relation`  (
  `id` bigint NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint NOT NULL AUTO_INCREMENT COMMENT 'nid, 自增长标识',
  PRIMARY KEY (`nid`) USING BTREE,
  UNIQUE INDEX `uk_configtagrelation_configidtag`(`id` ASC, `tag_name` ASC, `tag_type` ASC) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 9 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = 'config_tag_relation' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_tags_relation
-- ----------------------------
INSERT INTO `config_tags_relation` VALUES (35, 'SaaS', '', 'sdt-iam-web-limw.yaml', 'limw', 'limw', 5);
INSERT INTO `config_tags_relation` VALUES (36, 'SaaS', '', 'sdt-saas-limw.yaml', 'limw', 'limw', 8);

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE `group_capacity`  (
  `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_group_id`(`group_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = '集群、各Group容量信息表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of group_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE `his_config_info`  (
  `id` bigint UNSIGNED NOT NULL COMMENT 'id',
  `nid` bigint UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'nid, 自增标识',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'source ip',
  `op_type` char(10) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'operation type',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT '租户字段',
  `encrypted_data_key` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT '密钥',
  PRIMARY KEY (`nid`) USING BTREE,
  INDEX `idx_gmt_create`(`gmt_create` ASC) USING BTREE,
  INDEX `idx_gmt_modified`(`gmt_modified` ASC) USING BTREE,
  INDEX `idx_did`(`data_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 154 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = '多租户改造' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of his_config_info
-- ----------------------------
INSERT INTO `his_config_info` VALUES (0, 101, 'sdt-saas-dev.yaml', 'limw', 'paas', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  api-docs:\n    enabled: true \n  group-configs:\n    - group: 后端API接口\n     packages-to-scan: com.startdis.saas.web\n    - group: 前端API接口\n     packages-to-scan: com.startdis.saas.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.startdis: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.startdis.saas.infra.mapper: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '427a864a43d28b565914b06a65434ad7', '2024-08-09 17:25:29', '2024-08-09 17:25:30', NULL, '192.168.31.99', 'I', 'dev', '');
INSERT INTO `his_config_info` VALUES (24, 102, 'sdt-iam-web-dev.yaml', 'limw', 'paas', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet:\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\saas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '7df60d496abd9b2851894f84c7624663', '2024-08-09 17:29:00', '2024-08-09 17:29:01', 'nacos', '192.168.31.99', 'U', 'dev', '');
INSERT INTO `his_config_info` VALUES (0, 103, 'sdt-ams-web-limw.yaml', 'limw', 'paas', 'spring:\n  application:\n    name: sdt-ams-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-paas-ams?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-ams\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\paas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '33d08fe406a2dfdcf37eb44325c95323', '2024-08-09 21:40:53', '2024-08-09 21:40:53', NULL, '192.168.31.99', 'I', 'limw', '');
INSERT INTO `his_config_info` VALUES (0, 104, 'sdt-crm-web-limw.yaml', 'limw', 'paas', 'spring:\n  application:\n    name: sdt-crm-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-crm?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    username: root\n    password: 123456\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-saas-crm\n\n# XXL-JOB\nxxl-job:\n  enabled: false\n  # 调度中心部署跟地址\n  adminAddresses: http://192.168.31.88:8080/xxl-job-admin\n  # 执行器通讯TOKEN\n  accessToken:\n  # 执行器\n  executor:\n    # 执行器AppName\n    appname: sdt-ids-job\n    # 执行器注册地址\n    address:\n    # 执行器IP\n    ip:\n    # 执行器端口号\n    port:\n    # 执行器运行日志文件存储磁盘路径\n    logPath: /app/logs/sdt-ids-job\n    # 执行器日志文件保存天数\n    logRetentionDays: 30\n  \n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    appName: IDS\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\paas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '89c1e4fcdcb4a0f6004b254342487498', '2024-08-09 21:40:53', '2024-08-09 21:40:54', NULL, '192.168.31.99', 'I', 'limw', '');
INSERT INTO `his_config_info` VALUES (0, 105, 'sdt-lce-web-limw.yaml', 'limw', 'paas', 'spring:\n  application:\n    name: sdt-ids-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-paas-lce?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    username: root\n    password: 123456\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-lce\n\n# XXL-JOB\nxxl-job:\n  enabled: false\n  # 调度中心部署跟地址\n  adminAddresses: http://127.0.0.1:8080/xxl-job-admin\n  # 执行器通讯TOKEN\n  accessToken:\n  # 执行器\n  executor:\n    # 执行器AppName\n    appname: sdt-ids-job\n    # 执行器注册地址\n    address:\n    # 执行器IP\n    ip:\n    # 执行器端口号\n    port:\n    # 执行器运行日志文件存储磁盘路径\n    logPath: /app/logs/sdt-ids-job\n    # 执行器日志文件保存天数\n    logRetentionDays: 30\n  \n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\ncode:\n  formatXml: true\n  basePath: D:\\\\Codes\\\\demo\n\n# 开启系统操作日志\nlog:\n  record:\n    appName: IDS\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\paas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '705ff1d0125bc31e21b0ad84e8b7a97a', '2024-08-09 21:40:54', '2024-08-09 21:40:54', NULL, '192.168.31.99', 'I', 'limw', '');
INSERT INTO `his_config_info` VALUES (0, 106, 'sdt-sso-web-limw.yaml', 'limw', 'paas', 'spring:\n  application:\n    name: sdt-sso-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-paas-sso?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-sso\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\paas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', 'bf46a06e76bf21a3f9c90eb9f42fedc1', '2024-08-09 21:40:54', '2024-08-09 21:40:55', NULL, '192.168.31.99', 'I', 'limw', '');
INSERT INTO `his_config_info` VALUES (0, 107, 'sdt-ids-web-limw.yaml', 'limw', 'paas', 'spring:\n  application:\n    name: sdt-ids-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-paas-ids?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-ids\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\paas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '9fa1112ca9ea688c084a952f0dcc3a73', '2024-08-09 21:40:54', '2024-08-09 21:40:55', NULL, '192.168.31.99', 'I', 'limw', '');
INSERT INTO `his_config_info` VALUES (14, 108, 'sdt-ams-web-dev.yaml', 'limw', 'paas', 'spring:\n  application:\n    name: sdt-ams-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-paas-ams?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-ams\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\paas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '33d08fe406a2dfdcf37eb44325c95323', '2024-08-09 21:41:00', '2024-08-09 21:41:01', 'nacos', '192.168.31.99', 'D', 'dev', '');
INSERT INTO `his_config_info` VALUES (16, 109, 'sdt-crm-web-dev.yaml', 'limw', 'paas', 'spring:\n  application:\n    name: sdt-crm-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-crm?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    username: root\n    password: 123456\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-saas-crm\n\n# XXL-JOB\nxxl-job:\n  enabled: false\n  # 调度中心部署跟地址\n  adminAddresses: http://192.168.31.88:8080/xxl-job-admin\n  # 执行器通讯TOKEN\n  accessToken:\n  # 执行器\n  executor:\n    # 执行器AppName\n    appname: sdt-ids-job\n    # 执行器注册地址\n    address:\n    # 执行器IP\n    ip:\n    # 执行器端口号\n    port:\n    # 执行器运行日志文件存储磁盘路径\n    logPath: /app/logs/sdt-ids-job\n    # 执行器日志文件保存天数\n    logRetentionDays: 30\n  \n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    appName: IDS\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\paas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '89c1e4fcdcb4a0f6004b254342487498', '2024-08-09 21:41:00', '2024-08-09 21:41:01', 'nacos', '192.168.31.99', 'D', 'dev', '');
INSERT INTO `his_config_info` VALUES (17, 110, 'sdt-lce-web-dev.yaml', 'limw', 'paas', 'spring:\n  application:\n    name: sdt-ids-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-paas-lce?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    username: root\n    password: 123456\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-lce\n\n# XXL-JOB\nxxl-job:\n  enabled: false\n  # 调度中心部署跟地址\n  adminAddresses: http://127.0.0.1:8080/xxl-job-admin\n  # 执行器通讯TOKEN\n  accessToken:\n  # 执行器\n  executor:\n    # 执行器AppName\n    appname: sdt-ids-job\n    # 执行器注册地址\n    address:\n    # 执行器IP\n    ip:\n    # 执行器端口号\n    port:\n    # 执行器运行日志文件存储磁盘路径\n    logPath: /app/logs/sdt-ids-job\n    # 执行器日志文件保存天数\n    logRetentionDays: 30\n  \n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\ncode:\n  formatXml: true\n  basePath: D:\\\\Codes\\\\demo\n\n# 开启系统操作日志\nlog:\n  record:\n    appName: IDS\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\paas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '705ff1d0125bc31e21b0ad84e8b7a97a', '2024-08-09 21:41:00', '2024-08-09 21:41:01', 'nacos', '192.168.31.99', 'D', 'dev', '');
INSERT INTO `his_config_info` VALUES (21, 111, 'sdt-sso-web-dev.yaml', 'limw', 'paas', 'spring:\n  application:\n    name: sdt-sso-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-paas-sso?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-sso\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\paas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', 'bf46a06e76bf21a3f9c90eb9f42fedc1', '2024-08-09 21:41:00', '2024-08-09 21:41:01', 'nacos', '192.168.31.99', 'D', 'dev', '');
INSERT INTO `his_config_info` VALUES (22, 112, 'sdt-ids-web-dev.yaml', 'limw', 'paas', 'spring:\n  application:\n    name: sdt-ids-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-paas-ids?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-ids\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\paas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '9fa1112ca9ea688c084a952f0dcc3a73', '2024-08-09 21:41:01', '2024-08-09 21:41:01', 'nacos', '192.168.31.99', 'D', 'dev', '');
INSERT INTO `his_config_info` VALUES (0, 113, 'sdt-mps-web-limw.yaml', 'limw', 'paas', 'spring:\n  application:\n    name: sdt-mps-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-paas-mps?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-mps\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\paas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '09237428899dbabf76edaa110cd885ea', '2024-08-09 21:41:23', '2024-08-09 21:41:23', NULL, '192.168.31.99', 'I', 'limw', '');
INSERT INTO `his_config_info` VALUES (0, 114, 'sdt-iam-web-limw.yaml', 'limw', 'paas', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /sso/login,/sso/logout,/sso/oauth2/accessToken,/sso/oauth2/refreshToken,/sso/oauth2/checkToken\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\saas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '4e5575523439d15db800dcd12f0b2b51', '2024-08-09 21:41:23', '2024-08-09 21:41:24', NULL, '192.168.31.99', 'I', 'limw', '');
INSERT INTO `his_config_info` VALUES (0, 115, 'sdt-saas-limw.yaml', 'limw', 'paas', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  api-docs:\n    enabled: true \n  group-configs:\n    - group: 后端API接口\n     packages-to-scan: com.startdis.saas.web\n    - group: 前端API接口\n     packages-to-scan: com.startdis.saas.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.startdis: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.startdis.saas.infra.mapper: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '427a864a43d28b565914b06a65434ad7', '2024-08-09 21:41:24', '2024-08-09 21:41:24', NULL, '192.168.31.99', 'I', 'limw', '');
INSERT INTO `his_config_info` VALUES (23, 116, 'sdt-mps-web-dev.yaml', 'limw', 'paas', 'spring:\n  application:\n    name: sdt-mps-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-paas-mps?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-mps\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /user/getUserInfoByUserCode,/appInfo/list,/common/getUserInfo,/dept/getDeptByUserCode,/company/getCompanyInfoById,/operateLog/add,/operateLog/page,/operateLog/logPage\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\paas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '09237428899dbabf76edaa110cd885ea', '2024-08-09 21:41:28', '2024-08-09 21:41:28', 'nacos', '192.168.31.99', 'D', 'dev', '');
INSERT INTO `his_config_info` VALUES (24, 117, 'sdt-iam-web-dev.yaml', 'limw', 'paas', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /sso/login,/sso/logout,/sso/oauth2/accessToken,/sso/oauth2/refreshToken,/sso/oauth2/checkToken\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\saas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '4e5575523439d15db800dcd12f0b2b51', '2024-08-09 21:41:28', '2024-08-09 21:41:28', 'nacos', '192.168.31.99', 'D', 'dev', '');
INSERT INTO `his_config_info` VALUES (28, 118, 'sdt-saas-dev.yaml', 'limw', 'paas', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  api-docs:\n    enabled: true \n  group-configs:\n    - group: 后端API接口\n     packages-to-scan: com.startdis.saas.web\n    - group: 前端API接口\n     packages-to-scan: com.startdis.saas.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.startdis: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.startdis.saas.infra.mapper: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '427a864a43d28b565914b06a65434ad7', '2024-08-09 21:41:28', '2024-08-09 21:41:28', 'nacos', '192.168.31.99', 'D', 'dev', '');
INSERT INTO `his_config_info` VALUES (36, 119, 'sdt-saas-limw.yaml', 'limw', 'paas', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  api-docs:\n    enabled: true \n  group-configs:\n    - group: 后端API接口\n     packages-to-scan: com.startdis.saas.web\n    - group: 前端API接口\n     packages-to-scan: com.startdis.saas.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.startdis: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.startdis.saas.infra.mapper: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '427a864a43d28b565914b06a65434ad7', '2024-08-09 21:42:09', '2024-08-09 21:42:10', 'nacos', '192.168.31.99', 'U', 'limw', '');
INSERT INTO `his_config_info` VALUES (35, 120, 'sdt-iam-web-limw.yaml', 'limw', 'paas', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /sso/login,/sso/logout,/sso/oauth2/accessToken,/sso/oauth2/refreshToken,/sso/oauth2/checkToken\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\saas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '4e5575523439d15db800dcd12f0b2b51', '2024-08-09 21:43:15', '2024-08-09 21:43:16', 'nacos', '192.168.31.99', 'U', 'limw', '');
INSERT INTO `his_config_info` VALUES (0, 121, 'sdt-paas-limw.yaml', 'dev', 'paas', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  api-docs:\n    enabled: true \n  group-configs:\n    - group: 后端API接口\n     packages-to-scan: com.startdis.paas.web\n    - group: 前端API接口\n     packages-to-scan: com.startdis.paas.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志类型\nlogback:\n  fileType: log\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '274c5ffb6b9eb1deb3ce5eedcdac1cef', '2024-08-09 21:43:53', '2024-08-09 21:43:53', NULL, '192.168.31.99', 'I', 'limw', '');
INSERT INTO `his_config_info` VALUES (0, 122, 'sdt-paas-limw.yaml', 'limw', 'paas', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  api-docs:\n    enabled: true \n  group-configs:\n    - group: 后端API接口\n     packages-to-scan: com.startdis.paas.web\n    - group: 前端API接口\n     packages-to-scan: com.startdis.paas.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志类型\nlogback:\n  fileType: log\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '274c5ffb6b9eb1deb3ce5eedcdac1cef', '2024-08-09 21:44:25', '2024-08-09 21:44:26', NULL, '192.168.31.99', 'I', 'limw', '');
INSERT INTO `his_config_info` VALUES (37, 123, 'sdt-paas-limw.yaml', 'dev', 'paas', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  api-docs:\n    enabled: true \n  group-configs:\n    - group: 后端API接口\n     packages-to-scan: com.startdis.paas.web\n    - group: 前端API接口\n     packages-to-scan: com.startdis.paas.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志类型\nlogback:\n  fileType: log\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '274c5ffb6b9eb1deb3ce5eedcdac1cef', '2024-08-09 21:44:34', '2024-08-09 21:44:34', 'nacos', '192.168.31.99', 'D', 'limw', '');
INSERT INTO `his_config_info` VALUES (35, 124, 'sdt-iam-web-limw.yaml', 'limw', 'saas', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /sso/login,/sso/logout,/sso/oauth2/accessToken,/sso/oauth2/refreshToken,/sso/oauth2/checkToken\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\saas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: ids\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '4e5575523439d15db800dcd12f0b2b51', '2024-08-09 21:45:31', '2024-08-09 21:45:31', 'nacos', '192.168.31.99', 'U', 'limw', '');
INSERT INTO `his_config_info` VALUES (35, 125, 'sdt-iam-web-limw.yaml', 'limw', 'saas', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /sso/login,/sso/logout,/sso/oauth2/accessToken,/sso/oauth2/refreshToken,/sso/oauth2/checkToken\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IDS\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\saas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: iam\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '9a4ca11ac4a6b20c330110b1dc2de762', '2024-08-09 21:48:11', '2024-08-09 21:48:11', 'nacos', '192.168.31.99', 'U', 'limw', '');
INSERT INTO `his_config_info` VALUES (38, 126, 'sdt-paas-limw.yaml', 'limw', 'paas', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  api-docs:\n    enabled: true \n  group-configs:\n    - group: 后端API接口\n     packages-to-scan: com.startdis.paas.web\n    - group: 前端API接口\n     packages-to-scan: com.startdis.paas.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志类型\nlogback:\n  fileType: log\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '274c5ffb6b9eb1deb3ce5eedcdac1cef', '2024-08-11 10:08:37', '2024-08-11 10:08:38', 'nacos', '192.168.31.99', 'U', 'limw', '');
INSERT INTO `his_config_info` VALUES (35, 127, 'sdt-iam-web-limw.yaml', 'limw', 'saas', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /sso/login,/sso/logout,/sso/oauth2/accessToken,/sso/oauth2/refreshToken,/sso/oauth2/checkToken\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IAM\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\saas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: iam\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', 'ffaa396a4409199e86c1a2386cc39edb', '2024-08-16 11:31:32', '2024-08-16 11:31:32', 'nacos', '192.168.31.18', 'U', 'limw', '');
INSERT INTO `his_config_info` VALUES (36, 128, 'sdt-saas-limw.yaml', 'limw', 'saas', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  api-docs:\n    enabled: true \n  group-configs:\n    - group: 后端API接口\n     packages-to-scan: com.startdis.saas.web\n    - group: 前端API接口\n     packages-to-scan: com.startdis.saas.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.startdis: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.startdis.saas.infra.mapper: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '427a864a43d28b565914b06a65434ad7', '2024-08-16 11:40:48', '2024-08-16 11:40:48', 'nacos', '192.168.31.18', 'U', 'limw', '');
INSERT INTO `his_config_info` VALUES (36, 129, 'sdt-saas-limw.yaml', 'limw', 'saas', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  #是否开启文档功能\n  api-docs:\n    enabled: true \n  #这里定义了两个分组，可定义多个，也可以不定义\n  group-configs:\n      #分组名\n    - group: web\n      #按路径匹配\n      pathsToMatch: /web/**\n      packagesToScan: com.startdis.saas.web\n      #分组名\n    - group: app\n      #按包路径匹配\n      pathsToMatch: /app/**\n      packagesToScan: com.startdis.saas.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.startdis: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.startdis.saas.infra.mapper: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '2d6ad141458a73cdb899dff15d18b31b', '2024-08-16 11:41:15', '2024-08-16 11:41:15', 'nacos', '192.168.31.18', 'U', 'limw', '');
INSERT INTO `his_config_info` VALUES (36, 130, 'sdt-saas-limw.yaml', 'limw', 'saas', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  #是否开启文档功能\n  api-docs:\n    enabled: true \n  #这里定义了两个分组，可定义多个，也可以不定义\n  group-configs:\n      #分组名\n    - group: web\n      #按路径匹配\n      pathsToMatch: /web/**\n      packagesToScan: com.startdis.saas.web\n      #分组名\n    - group: app\n      #按包路径匹配\n      pathsToMatch: /app/**\n      packagesToScan: com.startdis.saas.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.startdis: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.startdis.saas.infra.mapper: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '2d6ad141458a73cdb899dff15d18b31b', '2024-08-16 14:26:58', '2024-08-16 14:26:58', 'nacos', '192.168.31.18', 'U', 'limw', '');
INSERT INTO `his_config_info` VALUES (0, 131, 'cloud-dev.yaml', 'dev', 'saas', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  #是否开启文档功能\n  api-docs:\n    enabled: true \n  #这里定义了两个分组，可定义多个，也可以不定义\n  group-configs:\n      #分组名\n    - group: web\n      #按包路径匹配\n      packagesToScan: com.startdis.saas.web\n      #分组名\n    - group: app\n      #按包路径匹配\n      packagesToScan: com.startdis.saas.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.startdis: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.startdis.saas.infra.mapper: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '67c73111705ee266c33ee532a045c668', '2024-08-16 20:23:38', '2024-08-16 20:23:39', NULL, '192.168.31.18', 'I', 'cloud', '');
INSERT INTO `his_config_info` VALUES (0, 132, 'sdt-iam-web-dev.yaml', 'dev', 'saas', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /sso/login/ticket,/sso/login/other,/sso/login/local,/sso/logout,/sso/oauth2/accessToken,/sso/oauth2/refreshToken,/sso/oauth2/checkToken\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IAM\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\saas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: iam\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', 'd6be24f23c813c115560a2a755d8e719', '2024-08-16 20:24:01', '2024-08-16 20:24:01', NULL, '192.168.31.18', 'I', 'cloud', '');
INSERT INTO `his_config_info` VALUES (40, 133, 'sdt-iam-web-dev.yaml', 'dev', 'saas', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /sso/login/ticket,/sso/login/other,/sso/login/local,/sso/logout,/sso/oauth2/accessToken,/sso/oauth2/refreshToken,/sso/oauth2/checkToken\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: false\n    pushUrl: http://localhost:6103/operateLog/add\n    appName: IAM\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\saas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: iam\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', 'd6be24f23c813c115560a2a755d8e719', '2024-08-16 21:36:00', '2024-08-16 21:36:01', 'nacos', '192.168.31.18', 'U', 'cloud', '');
INSERT INTO `his_config_info` VALUES (40, 134, 'sdt-iam-web-dev.yaml', 'dev', 'saas', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /sso/login/ticket,/sso/login/other,/sso/login/local,/sso/logout,/sso/oauth2/accessToken,/sso/oauth2/refreshToken,/sso/oauth2/checkToken\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n    appName: IAM\n    pushUrl: http://localhost:6103/operateLog/add\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\saas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: iam\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '1967de499577a4431085d76f6bfebd3c', '2024-08-16 22:24:02', '2024-08-16 22:24:03', 'nacos', '192.168.31.18', 'U', 'cloud', '');
INSERT INTO `his_config_info` VALUES (40, 135, 'sdt-iam-web-dev.yaml', 'dev', 'saas', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /sso/login/ticket,/sso/login/other,/sso/login/local,/sso/logout,/sso/oauth2/accessToken,/sso/oauth2/refreshToken,/sso/oauth2/checkToken,/logRecord/add\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n    appName: IAM\n    pushUrl: http://localhost:6103/operateLog/add\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\saas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: iam\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '95bca86df50dbf2b03e520ddd05aebf4', '2024-08-16 22:36:42', '2024-08-16 22:36:42', 'nacos', '192.168.31.18', 'U', 'cloud', '');
INSERT INTO `his_config_info` VALUES (39, 136, 'cloud-dev.yaml', 'dev', 'saas', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  #是否开启文档功能\n  api-docs:\n    enabled: true \n  #这里定义了两个分组，可定义多个，也可以不定义\n  group-configs:\n      #分组名\n    - group: web\n      #按包路径匹配\n      packagesToScan: com.startdis.saas.web\n      #分组名\n    - group: app\n      #按包路径匹配\n      packagesToScan: com.startdis.saas.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.startdis: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.startdis.saas.infra.mapper: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '67c73111705ee266c33ee532a045c668', '2024-08-16 23:44:58', '2024-08-16 23:44:59', 'nacos', '192.168.31.18', 'U', 'cloud', '');
INSERT INTO `his_config_info` VALUES (40, 137, 'sdt-iam-web-dev.yaml', 'dev', 'saas', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /sso/login/ticket,/sso/login/other,/sso/login/local,/sso/logout,/sso/oauth2/accessToken,/sso/oauth2/refreshToken,/sso/oauth2/checkToken,/logRecord/add,/logRecord/page\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n    appName: IAM\n    pushUrl: http://localhost:6103/operateLog/add\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\saas\\\\${spring.application.name}\\\\\n  fileType: log\n\n# 应用信息\nappInfo:\n  code: iam\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '00f94698c223decef6fd58e701d03f50', '2024-08-16 23:53:08', '2024-08-16 23:53:09', 'nacos', '192.168.31.18', 'U', 'cloud', '');
INSERT INTO `his_config_info` VALUES (39, 138, 'cloud-dev.yaml', 'dev', 'saas', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  #是否开启文档功能\n  api-docs:\n    enabled: true \n  #这里定义了两个分组，可定义多个，也可以不定义\n  group-configs:\n      #分组名\n    - group: web\n      #按包路径匹配\n      packagesToScan: com.startdis.saas.web\n      #分组名\n    - group: app\n      #按包路径匹配\n      packagesToScan: com.startdis.saas.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.startdis: debug\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '79a45c631783405da2d044a21083e7d0', '2024-08-17 00:04:30', '2024-08-17 00:04:30', 'nacos', '192.168.31.18', 'U', 'cloud', '');
INSERT INTO `his_config_info` VALUES (40, 139, 'sdt-iam-web-dev.yaml', 'dev', 'saas', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /sso/login/ticket,/sso/login/other,/sso/login/local,/sso/logout,/sso/oauth2/accessToken,/sso/oauth2/refreshToken,/sso/oauth2/checkToken,/logRecord/add,/logRecord/page\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n    appName: IAM\n    pushUrl: http://localhost:6103/operateLog/add\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\saas\\\\\n  fileType: log\n  maxDays: 30\n  maxSize: 500M\n\n# 应用信息\nappInfo:\n  code: iam\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', 'efc5192058f671acc07b6c1c7946c0ec', '2024-08-17 00:08:35', '2024-08-17 00:08:35', 'nacos', '192.168.31.18', 'U', 'cloud', '');
INSERT INTO `his_config_info` VALUES (40, 140, 'sdt-iam-web-dev.yaml', 'dev', 'saas', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /sso/login/ticket,/sso/login/other,/sso/login/local,/sso/logout,/sso/oauth2/accessToken,/sso/oauth2/refreshToken,/sso/oauth2/checkToken,/logRecord/add,/logRecord/page\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n    appName: IAM\n    pushUrl: http://localhost:6103/operateLog/add\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\saas\\\\\n  maxSize: 500M\n  maxDays: 30\n\n# 应用信息\nappInfo:\n  code: iam\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', 'adc528b3810474ab49c42ba796696fb4', '2024-08-17 00:12:44', '2024-08-17 00:12:44', 'nacos', '192.168.31.18', 'U', 'cloud', '');
INSERT INTO `his_config_info` VALUES (40, 141, 'sdt-iam-web-dev.yaml', 'dev', 'saas', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /sso/login/ticket,/sso/login/other,/sso/login/local,/sso/logout,/sso/oauth2/accessToken,/sso/oauth2/refreshToken,/sso/oauth2/checkToken,/logRecord/add,/logRecord/page\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n    appName: IAM\n    pushUrl: http://localhost:6103/operateLog/add\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\\\Logs\\\\sdt\\\\cloud\\\\\n  maxSize: 500MB\n  maxDays: 30\n\n# 应用信息\nappInfo:\n  code: iam\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '183288d952f7a4ed33349f2dec4a158d', '2024-08-17 00:21:15', '2024-08-17 00:21:15', 'nacos', '192.168.31.18', 'U', 'cloud', '');
INSERT INTO `his_config_info` VALUES (40, 142, 'sdt-iam-web-dev.yaml', 'dev', 'saas', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /sso/login/ticket,/sso/login/other,/sso/login/local,/sso/logout,/sso/oauth2/accessToken,/sso/oauth2/refreshToken,/sso/oauth2/checkToken,/logRecord/add,/logRecord/page\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n    appName: IAM\n    pushUrl: http://localhost:6103/operateLog/add\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\Logs\\sdt\\cloud\\\n  maxSize: 500MB\n  maxDays: 30\n\n# 应用信息\nappInfo:\n  code: iam\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', 'fca8d42698b328c791769746d164398f', '2024-08-17 00:24:57', '2024-08-17 00:24:58', 'nacos', '192.168.31.18', 'U', 'cloud', '');
INSERT INTO `his_config_info` VALUES (39, 143, 'cloud-dev.yaml', 'dev', 'saas', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  #是否开启文档功能\n  api-docs:\n    enabled: true \n  #这里定义了两个分组，可定义多个，也可以不定义\n  group-configs:\n      #分组名\n    - group: web\n      #按包路径匹配\n      packagesToScan: com.startdis.saas.web\n      #分组名\n    - group: app\n      #按包路径匹配\n      packagesToScan: com.startdis.saas.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.startdis: debug\n    # spring 包日志输出级别\n    org.springframework: info\n    # alibaba 包日志输出级别\n    com.alibaba.cloud: info\n    # nacos 心跳 INFO 屏蔽\n    com.alibaba.nacos: off\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '98352b78a8d6d6c6e4c5c5fa5a2723fe', '2024-08-17 01:02:41', '2024-08-17 01:02:42', 'nacos', '192.168.31.18', 'U', 'cloud', '');
INSERT INTO `his_config_info` VALUES (39, 144, 'cloud-dev.yaml', 'dev', 'saas', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  #是否开启文档功能\n  api-docs:\n    enabled: true \n  #这里定义了两个分组，可定义多个，也可以不定义\n  group-configs:\n      #分组名\n    - group: web\n      #按包路径匹配\n      packages-to-scan: com.startdis.saas.web\n      #分组名\n    - group: app\n      #按包路径匹配\n      packages-to-scan: com.startdis.saas.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.startdis: debug\n    # spring 包日志输出级别\n    org.springframework: info\n    # alibaba 包日志输出级别\n    com.alibaba.cloud: info\n    # nacos 心跳 INFO 屏蔽\n    com.alibaba.nacos: off\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '55b7ed7c9515afc2cd77be28e9f6354d', '2024-08-17 01:07:40', '2024-08-17 01:07:40', 'nacos', '192.168.31.18', 'U', 'cloud', '');
INSERT INTO `his_config_info` VALUES (40, 145, 'sdt-iam-web-dev.yaml', 'dev', 'saas', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /sso/login/ticket,/sso/login/other,/sso/login/local,/sso/logout,/sso/oauth2/accessToken,/sso/oauth2/refreshToken,/sso/oauth2/checkToken,/logRecord/add,/logRecord/page\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n    appName: IAM\n    pushUrl: http://localhost:6103/operateLog/add\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\Logs\\sdt\\cloud\\${spring.application.name}\\\n  maxSize: 500MB\n  maxDays: 30\n\n# 应用信息\nappInfo:\n  code: iam\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '7b3b24ae5c0dc22b386bed2507828597', '2024-08-17 01:08:34', '2024-08-17 01:08:35', 'nacos', '192.168.31.18', 'U', 'cloud', '');
INSERT INTO `his_config_info` VALUES (40, 146, 'sdt-iam-web-dev.yaml', 'dev', 'saas', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /sso/login/ticket,/sso/login/other,/sso/login/local,/sso/logout,/sso/oauth2/accessToken,/sso/oauth2/refreshToken,/sso/oauth2/checkToken,/logRecord/add,/logRecord/pageLogin,/logRecord/pageOperate,/logRecord/pageException\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n    appName: IAM\n    pushUrl: http://localhost:6103/operateLog/add\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\Logs\\sdt\\cloud\\${spring.application.name}\\\n  maxSize: 500MB\n  maxDays: 30\n\n# 应用信息\nappInfo:\n  code: iam\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', 'ab5555b880bfa6aca30a149c2e32b84f', '2024-08-17 01:09:29', '2024-08-17 01:09:29', 'nacos', '192.168.31.18', 'U', 'cloud', '');
INSERT INTO `his_config_info` VALUES (39, 147, 'cloud-dev.yaml', 'dev', 'saas', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  #是否开启文档功能\n  api-docs:\n    enabled: true \n  #这里定义了两个分组，可定义多个，也可以不定义\n  group-configs:\n      #分组名\n    - group: web\n      #按包路径匹配\n      packages-to-scan: com.startdis.*.web\n      #分组名\n    - group: app\n      #按包路径匹配\n      packages-to-scan: com.startdis.*.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.startdis: debug\n    # spring 包日志输出级别\n    org.springframework: info\n    # alibaba 包日志输出级别\n    com.alibaba.cloud: info\n    # nacos 心跳 INFO 屏蔽\n    com.alibaba.nacos: off\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', 'bf2513764f5eb1649fe127d05ecb6586', '2024-08-17 01:11:21', '2024-08-17 01:11:21', 'nacos', '192.168.31.18', 'U', 'cloud', '');
INSERT INTO `his_config_info` VALUES (39, 148, 'cloud-dev.yaml', 'dev', 'saas', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  #是否开启文档功能\n  api-docs:\n    enabled: true \n  #这里定义了两个分组，可定义多个，也可以不定义\n  group-configs:\n      #分组名\n    - group: web\n      #按包路径匹配\n      packagesToScan: com.startdis.**.web\n      #分组名\n    - group: app\n      #按包路径匹配\n      packagesToScan: com.startdis.**.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.startdis: debug\n    # spring 包日志输出级别\n    org.springframework: info\n    # alibaba 包日志输出级别\n    com.alibaba.cloud: info\n    # nacos 心跳 INFO 屏蔽\n    com.alibaba.nacos: off\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', 'dd49a4972aa92ec8a230195afebc5c05', '2024-08-17 01:16:41', '2024-08-17 01:16:41', 'nacos', '192.168.31.18', 'U', 'cloud', '');
INSERT INTO `his_config_info` VALUES (39, 149, 'cloud-dev.yaml', 'dev', 'saas', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  #是否开启文档功能\n  api-docs:\n    enabled: true \n  #这里定义了两个分组，可定义多个，也可以不定义\n  group-configs:\n      #分组名\n    - group: web\n      #按包路径匹配\n      packages-to-scan: com.startdis.*.web\n      #分组名\n    - group: app\n      #按包路径匹配\n      packages-to-scan: com.startdis.*.app\n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.startdis: debug\n    # spring 包日志输出级别\n    org.springframework: info\n    # alibaba 包日志输出级别\n    com.alibaba.cloud: info\n    # nacos 心跳 INFO 屏蔽\n    com.alibaba.nacos: off\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', 'bf2513764f5eb1649fe127d05ecb6586', '2024-08-17 01:22:10', '2024-08-17 01:22:10', 'nacos', '192.168.31.18', 'U', 'cloud', '');
INSERT INTO `his_config_info` VALUES (40, 150, 'sdt-iam-web-dev.yaml', 'dev', 'saas', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /sso/login/ticket,/sso/login/other,/sso/login/local,/sso/logout,/sso/oauth2/accessToken,/sso/oauth2/refreshToken,/sso/oauth2/checkToken,/logRecord/add,/logRecord/pageLogin,/logRecord/pageOperate,/logRecord/pageException\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n    appName: IAM\n    pushUrl: http://localhost:6103/operateLog/add\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\Logs\\sdt\\cloud\\${spring.application.name}\\\n  maxSize: 500MB\n  maxDays: 30\n\n# 应用信息\nappInfo:\n  code: iam\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', 'ab5555b880bfa6aca30a149c2e32b84f', '2024-08-17 01:26:49', '2024-08-17 01:26:50', 'nacos', '192.168.31.18', 'U', 'cloud', '');
INSERT INTO `his_config_info` VALUES (40, 151, 'sdt-iam-web-dev.yaml', 'dev', 'saas', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n      \n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /sso/login/ticket,/sso/login/other,/sso/login/local,/sso/logout,/sso/oauth2/accessToken,/sso/oauth2/refreshToken,/sso/oauth2/checkToken,/logRecord/add,/logRecord/pageLogin,/logRecord/pageOperate,/logRecord/pageException\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n    appName: IAM\n    pushUrl: http://localhost:6103/operateLog/add\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\Logs\\sdt\\cloud\\${spring.application.name}\\\n  maxSize: 500MB\n  maxDays: 30\n\n# 应用信息\nappInfo:\n  code: iam\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '054987c5c8acce7bcd0144bf1780f9ef', '2024-08-17 01:31:31', '2024-08-17 01:31:31', 'nacos', '192.168.31.18', 'U', 'cloud', '');
INSERT INTO `his_config_info` VALUES (39, 152, 'cloud-dev.yaml', 'dev', 'saas', '# 服务端口号\nserver:\n  # tomcat 配置\n  tomcat:\n    # tomcat的URI编码\n    uri-encoding: UTF-8\n    # tomcat最大线程数，默认为200\n    max-threads: 500\n    # Tomcat启动初始化的线程数，默认值25\n    min-spare-threads: 30\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  # helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n  \n# feign\nfeign:\n  okhttp:\n    enabled: true\n  hystrix:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# springdoc-openapi项目配置\nspringdoc:\n  #是否开启文档功能\n  api-docs:\n    enabled: true \n\n# knife4j的增强配置，不需要增强可以不配\nknife4j:\n  enable: true\n  setting:\n    language: zh-CN\n\n# 定义日志输出级别\nlogging:\n  level:\n    com.startdis: debug\n    # spring 包日志输出级别\n    org.springframework: info\n    # alibaba 包日志输出级别\n    com.alibaba.cloud: info\n    # nacos 心跳 INFO 屏蔽\n    com.alibaba.nacos: off\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n\nspring:\n    # 循环依赖的问题\n  main:\n    allow-circular-references: true\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\n  mvc:\n    pathmatch:\n      matching-strategy: ANT_PATH_MATCHER', '09b738a4b68957198d108f62b8e7d308', '2024-08-17 01:36:43', '2024-08-17 01:36:43', 'nacos', '192.168.31.18', 'U', 'cloud', '');
INSERT INTO `his_config_info` VALUES (40, 153, 'sdt-iam-web-dev.yaml', 'dev', 'saas', 'spring:\n  application:\n    name: sdt-iam-web\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # mysql\n    url: jdbc:mysql://192.168.31.66:3306/sdt-saas-iam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.31.66\n    password: ydsz1020\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 30\n      # 任务队列大小\n      queueCapacity: 3000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n      \n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.31.88:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: Sdt@1020~\n  #存储桶\n  bucketName: sdt-paas-iam\n\n# 拦截器\nsql-intercept:\n  tenant: \n    deptTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /sso/login/ticket,/sso/login/other,/sso/login/local,/sso/logout,/sso/oauth2/accessToken,/sso/oauth2/refreshToken,/sso/oauth2/checkToken,/logRecord/add,/logRecord/pageLogin,/logRecord/pageOperate,/logRecord/pageException\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n# springdoc-openapi项目配置\nspringdoc:\n  #是否开启文档功能\n  group-config:\n    -\n      name: \"iam-web\"\n      display-name: \"统一身份接口\"\n      packages-to-scan: \"com.startdis.iam.web.controler\"\n      paths: \"/web-api/**\"\n    -\n      name: \"iam-app\"\n      display-name: \"统一身份接口\"\n      packages-to-scan: \"com.startdis.iam.app.controler\"\n      paths: \"/app-api/**\"\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n    appName: IAM\n    pushUrl: http://localhost:6103/operateLog/add\n\n# 日志输出路径配置\nlogback:\n  logDir: D:\\Logs\\sdt\\cloud\\${spring.application.name}\\\n  maxSize: 500MB\n  maxDays: 30\n\n# 应用信息\nappInfo:\n  code: iam\n  key: kxxyuc46\n  secret: f62b0078aa9b9bcc953b71d614fe999b', '5b157549152f8109c8116ea895e607e1', '2024-08-17 01:38:02', '2024-08-17 01:38:02', 'nacos', '192.168.31.18', 'U', 'cloud', '');

-- ----------------------------
-- Table structure for permissions
-- ----------------------------
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE `permissions`  (
  `role` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT 'role',
  `resource` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT 'resource',
  `action` varchar(8) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT 'action',
  UNIQUE INDEX `uk_role_permission`(`role` ASC, `resource` ASC, `action` ASC) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of permissions
-- ----------------------------

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles`  (
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT 'username',
  `role` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT 'role',
  UNIQUE INDEX `idx_user_role`(`username` ASC, `role` ASC) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO `roles` VALUES ('nacos', 'ROLE_ADMIN');

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE `tenant_capacity`  (
  `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数',
  `max_aggr_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_id`(`tenant_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = '租户容量信息表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of tenant_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE `tenant_info`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_info_kptenantid`(`kp` ASC, `tenant_id` ASC) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 7 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = 'tenant_info' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of tenant_info
-- ----------------------------
INSERT INTO `tenant_info` VALUES (1, '1', 'dev', 'dev', '开发环境', 'nacos', 1719490362786, 1719490362786);
INSERT INTO `tenant_info` VALUES (2, '1', 'sit', 'sit', '测试环境', 'nacos', 1719490389041, 1719490389041);
INSERT INTO `tenant_info` VALUES (3, '1', 'uat', 'uat', '演示环境', 'nacos', 1719490401468, 1719490401468);
INSERT INTO `tenant_info` VALUES (5, '1', 'limw', 'limw', '开发环境', 'nacos', 1723210812338, 1723210812338);
INSERT INTO `tenant_info` VALUES (6, '1', 'cloud', 'cloud', 'cloud', 'nacos', 1723810979388, 1723810979388);

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT 'username',
  `password` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT 'password',
  `enabled` tinyint(1) NOT NULL COMMENT 'enabled',
  PRIMARY KEY (`username`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('nacos', '$2a$10$txVYvy5638qMzVgVURjOueUMc80Fp8yJiDYc9KgcvWGZsNcMT4lyO', 1);

SET FOREIGN_KEY_CHECKS = 1;
